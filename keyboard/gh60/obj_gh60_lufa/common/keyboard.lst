   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.keyboard_setup,"ax",@progbits
  11               	.global	keyboard_setup
  13               	keyboard_setup:
  14               	.LFB103:
  15               		.file 1 "../../tmk_core/common/keyboard.c"
   1:../../tmk_core/common/keyboard.c **** /*
   2:../../tmk_core/common/keyboard.c **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/keyboard.c **** 
   4:../../tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/keyboard.c **** (at your option) any later version.
   8:../../tmk_core/common/keyboard.c **** 
   9:../../tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:../../tmk_core/common/keyboard.c **** 
  14:../../tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/keyboard.c **** */
  17:../../tmk_core/common/keyboard.c **** #include <stdint.h>
  18:../../tmk_core/common/keyboard.c **** #include "keyboard.h"
  19:../../tmk_core/common/keyboard.c **** #include "matrix.h"
  20:../../tmk_core/common/keyboard.c **** #include "keymap.h"
  21:../../tmk_core/common/keyboard.c **** #include "host.h"
  22:../../tmk_core/common/keyboard.c **** #include "led.h"
  23:../../tmk_core/common/keyboard.c **** #include "keycode.h"
  24:../../tmk_core/common/keyboard.c **** #include "timer.h"
  25:../../tmk_core/common/keyboard.c **** #include "print.h"
  26:../../tmk_core/common/keyboard.c **** #include "debug.h"
  27:../../tmk_core/common/keyboard.c **** #include "command.h"
  28:../../tmk_core/common/keyboard.c **** #include "util.h"
  29:../../tmk_core/common/keyboard.c **** #include "sendchar.h"
  30:../../tmk_core/common/keyboard.c **** #include "bootmagic.h"
  31:../../tmk_core/common/keyboard.c **** #include "eeconfig.h"
  32:../../tmk_core/common/keyboard.c **** #include "backlight.h"
  33:../../tmk_core/common/keyboard.c **** #include "hook.h"
  34:../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  35:../../tmk_core/common/keyboard.c **** #   include "mousekey.h"
  36:../../tmk_core/common/keyboard.c **** #endif
  37:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  38:../../tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  39:../../tmk_core/common/keyboard.c **** #endif
  40:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  41:../../tmk_core/common/keyboard.c **** #include "serial_mouse.h"
  42:../../tmk_core/common/keyboard.c **** #endif
  43:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  44:../../tmk_core/common/keyboard.c **** #include "adb.h"
  45:../../tmk_core/common/keyboard.c **** #endif
  46:../../tmk_core/common/keyboard.c **** 
  47:../../tmk_core/common/keyboard.c **** 
  48:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  49:../../tmk_core/common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  50:../../tmk_core/common/keyboard.c **** {
  51:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  52:../../tmk_core/common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  53:../../tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  54:../../tmk_core/common/keyboard.c ****         return false;
  55:../../tmk_core/common/keyboard.c **** 
  56:../../tmk_core/common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  57:../../tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  58:../../tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  59:../../tmk_core/common/keyboard.c ****             return true;
  60:../../tmk_core/common/keyboard.c ****     }
  61:../../tmk_core/common/keyboard.c ****     return false;
  62:../../tmk_core/common/keyboard.c **** }
  63:../../tmk_core/common/keyboard.c **** #endif
  64:../../tmk_core/common/keyboard.c **** 
  65:../../tmk_core/common/keyboard.c **** 
  66:../../tmk_core/common/keyboard.c **** void keyboard_setup(void)
  67:../../tmk_core/common/keyboard.c **** {
  16               		.loc 1 67 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  68:../../tmk_core/common/keyboard.c ****     matrix_setup();
  22               		.loc 1 68 0
  23 0000 0C94 0000 		jmp matrix_setup
  24               	.LVL0:
  25               		.cfi_endproc
  26               	.LFE103:
  28               		.section	.text.keyboard_init,"ax",@progbits
  29               	.global	keyboard_init
  31               	keyboard_init:
  32               	.LFB104:
  69:../../tmk_core/common/keyboard.c **** }
  70:../../tmk_core/common/keyboard.c **** 
  71:../../tmk_core/common/keyboard.c **** void keyboard_init(void)
  72:../../tmk_core/common/keyboard.c **** {
  33               		.loc 1 72 0
  34               		.cfi_startproc
  35               	/* prologue: function */
  36               	/* frame size = 0 */
  37               	/* stack size = 0 */
  38               	.L__stack_usage = 0
  73:../../tmk_core/common/keyboard.c ****     timer_init();
  39               		.loc 1 73 0
  40 0000 0E94 0000 		call timer_init
  41               	.LVL1:
  74:../../tmk_core/common/keyboard.c ****     matrix_init();
  42               		.loc 1 74 0
  43 0004 0E94 0000 		call matrix_init
  44               	.LVL2:
  75:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  76:../../tmk_core/common/keyboard.c ****     ps2_mouse_init();
  77:../../tmk_core/common/keyboard.c **** #endif
  78:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  79:../../tmk_core/common/keyboard.c ****     serial_mouse_init();
  80:../../tmk_core/common/keyboard.c **** #endif
  81:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  82:../../tmk_core/common/keyboard.c ****     adb_mouse_init();
  83:../../tmk_core/common/keyboard.c **** #endif
  84:../../tmk_core/common/keyboard.c **** 
  85:../../tmk_core/common/keyboard.c **** 
  86:../../tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  87:../../tmk_core/common/keyboard.c ****     bootmagic();
  45               		.loc 1 87 0
  46 0008 0C94 0000 		jmp bootmagic
  47               	.LVL3:
  48               		.cfi_endproc
  49               	.LFE104:
  51               		.section	.text.keyboard_task,"ax",@progbits
  52               	.global	keyboard_task
  54               	keyboard_task:
  55               	.LFB105:
  88:../../tmk_core/common/keyboard.c **** #endif
  89:../../tmk_core/common/keyboard.c **** 
  90:../../tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
  91:../../tmk_core/common/keyboard.c ****     backlight_init();
  92:../../tmk_core/common/keyboard.c **** #endif
  93:../../tmk_core/common/keyboard.c **** }
  94:../../tmk_core/common/keyboard.c **** 
  95:../../tmk_core/common/keyboard.c **** /*
  96:../../tmk_core/common/keyboard.c ****  * Do keyboard routine jobs: scan mantrix, light LEDs, ...
  97:../../tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
  98:../../tmk_core/common/keyboard.c ****  */
  99:../../tmk_core/common/keyboard.c **** void keyboard_task(void)
 100:../../tmk_core/common/keyboard.c **** {
  56               		.loc 1 100 0
  57               		.cfi_startproc
  58 0000 5F92      		push r5
  59               	.LCFI0:
  60               		.cfi_def_cfa_offset 3
  61               		.cfi_offset 5, -2
  62 0002 6F92      		push r6
  63               	.LCFI1:
  64               		.cfi_def_cfa_offset 4
  65               		.cfi_offset 6, -3
  66 0004 7F92      		push r7
  67               	.LCFI2:
  68               		.cfi_def_cfa_offset 5
  69               		.cfi_offset 7, -4
  70 0006 8F92      		push r8
  71               	.LCFI3:
  72               		.cfi_def_cfa_offset 6
  73               		.cfi_offset 8, -5
  74 0008 9F92      		push r9
  75               	.LCFI4:
  76               		.cfi_def_cfa_offset 7
  77               		.cfi_offset 9, -6
  78 000a AF92      		push r10
  79               	.LCFI5:
  80               		.cfi_def_cfa_offset 8
  81               		.cfi_offset 10, -7
  82 000c BF92      		push r11
  83               	.LCFI6:
  84               		.cfi_def_cfa_offset 9
  85               		.cfi_offset 11, -8
  86 000e CF92      		push r12
  87               	.LCFI7:
  88               		.cfi_def_cfa_offset 10
  89               		.cfi_offset 12, -9
  90 0010 DF92      		push r13
  91               	.LCFI8:
  92               		.cfi_def_cfa_offset 11
  93               		.cfi_offset 13, -10
  94 0012 EF92      		push r14
  95               	.LCFI9:
  96               		.cfi_def_cfa_offset 12
  97               		.cfi_offset 14, -11
  98 0014 FF92      		push r15
  99               	.LCFI10:
 100               		.cfi_def_cfa_offset 13
 101               		.cfi_offset 15, -12
 102 0016 0F93      		push r16
 103               	.LCFI11:
 104               		.cfi_def_cfa_offset 14
 105               		.cfi_offset 16, -13
 106 0018 1F93      		push r17
 107               	.LCFI12:
 108               		.cfi_def_cfa_offset 15
 109               		.cfi_offset 17, -14
 110 001a CF93      		push r28
 111               	.LCFI13:
 112               		.cfi_def_cfa_offset 16
 113               		.cfi_offset 28, -15
 114 001c DF93      		push r29
 115               	.LCFI14:
 116               		.cfi_def_cfa_offset 17
 117               		.cfi_offset 29, -16
 118 001e 00D0      		rcall .
 119 0020 00D0      		rcall .
 120 0022 1F92      		push __zero_reg__
 121               	.LCFI15:
 122               		.cfi_def_cfa_offset 22
 123 0024 CDB7      		in r28,__SP_L__
 124 0026 DEB7      		in r29,__SP_H__
 125               	.LCFI16:
 126               		.cfi_def_cfa_register 28
 127               	/* prologue: function */
 128               	/* frame size = 5 */
 129               	/* stack size = 20 */
 130               	.L__stack_usage = 20
 131               	.LVL4:
 101:../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 102:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 103:../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_ghost[MATRIX_ROWS];
 104:../../tmk_core/common/keyboard.c **** #endif
 105:../../tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 106:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 107:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 108:../../tmk_core/common/keyboard.c **** 
 109:../../tmk_core/common/keyboard.c ****     matrix_scan();
 132               		.loc 1 109 0
 133 0028 0E94 0000 		call matrix_scan
 134               	.LVL5:
 135 002c 00E0      		ldi r16,lo8(matrix_prev.4899)
 136 002e 10E0      		ldi r17,hi8(matrix_prev.4899)
 137               	.LBB2:
 110:../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 138               		.loc 1 110 0
 139 0030 512C      		mov r5,__zero_reg__
 140               	.LBB3:
 111:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 112:../../tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 113:../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 114:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 115:../../tmk_core/common/keyboard.c ****             if (has_ghost_in_row(r)) {
 116:../../tmk_core/common/keyboard.c ****                 /* Keep track of whether ghosted status has changed for
 117:../../tmk_core/common/keyboard.c ****                  * debugging. But don't update matrix_prev until un-ghosted, or
 118:../../tmk_core/common/keyboard.c ****                  * the last key would be lost.
 119:../../tmk_core/common/keyboard.c ****                  */
 120:../../tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 121:../../tmk_core/common/keyboard.c ****                     matrix_print();
 122:../../tmk_core/common/keyboard.c ****                 }
 123:../../tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 124:../../tmk_core/common/keyboard.c ****                 continue;
 125:../../tmk_core/common/keyboard.c ****             }
 126:../../tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 127:../../tmk_core/common/keyboard.c **** #endif
 128:../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 129:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 130:../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 141               		.loc 1 130 0
 142 0032 6624      		clr r6
 143 0034 6394      		inc r6
 144 0036 712C      		mov r7,__zero_reg__
 145               	.LVL6:
 146               	.L5:
 147               	.LBE3:
 111:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 148               		.loc 1 111 0
 149 0038 852D      		mov r24,r5
 150 003a 0E94 0000 		call matrix_get_row
 151               	.LVL7:
 152 003e 5C01      		movw r10,r24
 153               	.LVL8:
 112:../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 154               		.loc 1 112 0
 155 0040 F801      		movw r30,r16
 156 0042 C080      		ld r12,Z
 157 0044 D180      		ldd r13,Z+1
 158               	.LVL9:
 113:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 159               		.loc 1 113 0
 160 0046 8C15      		cp r24,r12
 161 0048 9D05      		cpc r25,r13
 162 004a 01F0      		breq .+2
 163 004c 00C0      		rjmp .L4
 164               	.LVL10:
 165               	.L11:
 110:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 166               		.loc 1 110 0
 167 004e 5394      		inc r5
 168               	.LVL11:
 169 0050 0E5F      		subi r16,-2
 170 0052 1F4F      		sbci r17,-1
 171 0054 F5E0      		ldi r31,lo8(5)
 172 0056 5F12      		cpse r5,r31
 173 0058 00C0      		rjmp .L5
 174               	.LBE2:
 131:../../tmk_core/common/keyboard.c ****                     keyevent_t e = (keyevent_t){
 132:../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 133:../../tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 134:../../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 135:../../tmk_core/common/keyboard.c ****                     };
 136:../../tmk_core/common/keyboard.c ****                     action_exec(e);
 137:../../tmk_core/common/keyboard.c ****                     hook_matrix_change(e);
 138:../../tmk_core/common/keyboard.c ****                     // record a processed key
 139:../../tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 140:../../tmk_core/common/keyboard.c **** 
 141:../../tmk_core/common/keyboard.c ****                     // This can miss stroke when scan matrix takes long like Topre
 142:../../tmk_core/common/keyboard.c ****                     // process a key per task call
 143:../../tmk_core/common/keyboard.c ****                     //goto MATRIX_LOOP_END;
 144:../../tmk_core/common/keyboard.c ****                 }
 145:../../tmk_core/common/keyboard.c ****             }
 146:../../tmk_core/common/keyboard.c ****         }
 147:../../tmk_core/common/keyboard.c ****     }
 148:../../tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 149:../../tmk_core/common/keyboard.c ****     action_exec(TICK);
 175               		.loc 1 149 0
 176 005a 8FEF      		ldi r24,lo8(-1)
 177 005c 8983      		std Y+1,r24
 178 005e 8A83      		std Y+2,r24
 179 0060 1B82      		std Y+3,__zero_reg__
 180 0062 0E94 0000 		call timer_read
 181               	.LVL12:
 182 0066 8160      		ori r24,1
 183 0068 782F      		mov r23,r24
 184 006a 9D83      		std Y+5,r25
 185 006c 8C83      		std Y+4,r24
 186 006e 4981      		ldd r20,Y+1
 187 0070 5A81      		ldd r21,Y+2
 188 0072 6B81      		ldd r22,Y+3
 189 0074 8D81      		ldd r24,Y+5
 190 0076 0E94 0000 		call action_exec
 191               	.LVL13:
 192               	.LDL1:
 150:../../tmk_core/common/keyboard.c **** 
 151:../../tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 152:../../tmk_core/common/keyboard.c **** 
 153:../../tmk_core/common/keyboard.c ****     hook_keyboard_loop();
 193               		.loc 1 153 0
 194 007a 0E94 0000 		call hook_keyboard_loop
 195               	.LVL14:
 154:../../tmk_core/common/keyboard.c **** 
 155:../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 156:../../tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 157:../../tmk_core/common/keyboard.c ****     mousekey_task();
 196               		.loc 1 157 0
 197 007e 0E94 0000 		call mousekey_task
 198               	.LVL15:
 158:../../tmk_core/common/keyboard.c **** #endif
 159:../../tmk_core/common/keyboard.c **** 
 160:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 161:../../tmk_core/common/keyboard.c ****     ps2_mouse_task();
 162:../../tmk_core/common/keyboard.c **** #endif
 163:../../tmk_core/common/keyboard.c **** 
 164:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 165:../../tmk_core/common/keyboard.c ****         serial_mouse_task();
 166:../../tmk_core/common/keyboard.c **** #endif
 167:../../tmk_core/common/keyboard.c **** 
 168:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 169:../../tmk_core/common/keyboard.c ****         adb_mouse_task();
 170:../../tmk_core/common/keyboard.c **** #endif
 171:../../tmk_core/common/keyboard.c **** 
 172:../../tmk_core/common/keyboard.c ****     // update LED
 173:../../tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 199               		.loc 1 173 0
 200 0082 0E94 0000 		call host_keyboard_leds
 201               	.LVL16:
 202 0086 9091 0000 		lds r25,led_status.4900
 203 008a 8917      		cp r24,r25
 204 008c 01F4      		brne .+2
 205 008e 00C0      		rjmp .L3
 174:../../tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 206               		.loc 1 174 0
 207 0090 0E94 0000 		call host_keyboard_leds
 208               	.LVL17:
 209 0094 8093 0000 		sts led_status.4900,r24
 175:../../tmk_core/common/keyboard.c ****         if (debug_keyboard) dprintf("LED: %02X\n", led_status);
 210               		.loc 1 175 0
 211 0098 9091 0000 		lds r25,debug_config
 212 009c 9570      		andi r25,lo8(5)
 213 009e 9530      		cpi r25,lo8(5)
 214 00a0 01F4      		brne .L13
 215               		.loc 1 175 0 is_stmt 0 discriminator 2
 216 00a2 1F92      		push __zero_reg__
 217 00a4 8F93      		push r24
 218 00a6 80E0      		ldi r24,lo8(__c.4917)
 219 00a8 90E0      		ldi r25,hi8(__c.4917)
 220 00aa 9F93      		push r25
 221 00ac 8F93      		push r24
 222 00ae 0E94 0000 		call __xprintf
 223               	.LVL18:
 224 00b2 0F90      		pop __tmp_reg__
 225 00b4 0F90      		pop __tmp_reg__
 226 00b6 0F90      		pop __tmp_reg__
 227 00b8 0F90      		pop __tmp_reg__
 228               	.L13:
 176:../../tmk_core/common/keyboard.c ****         hook_keyboard_leds_change(led_status);
 229               		.loc 1 176 0 is_stmt 1
 230 00ba 8091 0000 		lds r24,led_status.4900
 231               	/* epilogue start */
 177:../../tmk_core/common/keyboard.c ****     }
 178:../../tmk_core/common/keyboard.c **** }
 232               		.loc 1 178 0
 233 00be 0F90      		pop __tmp_reg__
 234 00c0 0F90      		pop __tmp_reg__
 235 00c2 0F90      		pop __tmp_reg__
 236 00c4 0F90      		pop __tmp_reg__
 237 00c6 0F90      		pop __tmp_reg__
 238 00c8 DF91      		pop r29
 239 00ca CF91      		pop r28
 240 00cc 1F91      		pop r17
 241 00ce 0F91      		pop r16
 242 00d0 FF90      		pop r15
 243 00d2 EF90      		pop r14
 244 00d4 DF90      		pop r13
 245 00d6 CF90      		pop r12
 246 00d8 BF90      		pop r11
 247 00da AF90      		pop r10
 248               	.LVL19:
 249 00dc 9F90      		pop r9
 250 00de 8F90      		pop r8
 251 00e0 7F90      		pop r7
 252 00e2 6F90      		pop r6
 253 00e4 5F90      		pop r5
 254               	.LVL20:
 176:../../tmk_core/common/keyboard.c ****         hook_keyboard_leds_change(led_status);
 255               		.loc 1 176 0
 256 00e6 0C94 0000 		jmp hook_keyboard_leds_change
 257               	.LVL21:
 258               	.L4:
 259               	.LBB6:
 128:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 260               		.loc 1 128 0
 261 00ea 8091 0000 		lds r24,debug_config
 262 00ee 81FD      		sbrc r24,1
 128:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 263               		.loc 1 128 0 is_stmt 0 discriminator 1
 264 00f0 0E94 0000 		call matrix_print
 265               	.LVL22:
 266               	.L7:
 110:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 267               		.loc 1 110 0 is_stmt 1
 268 00f4 E12C      		mov r14,__zero_reg__
 269 00f6 F12C      		mov r15,__zero_reg__
 112:../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 270               		.loc 1 112 0
 271 00f8 CA24      		eor r12,r10
 272 00fa DB24      		eor r13,r11
 273               	.LVL23:
 274               	.L10:
 275               	.LBB5:
 130:../../tmk_core/common/keyboard.c ****                     keyevent_t e = (keyevent_t){
 276               		.loc 1 130 0
 277 00fc 4301      		movw r8,r6
 278 00fe 0E2C      		mov r0,r14
 279 0100 00C0      		rjmp 2f
 280               		1:
 281 0102 880C      		lsl r8
 282 0104 991C      		rol r9
 283               		2:
 284 0106 0A94      		dec r0
 285 0108 02F4      		brpl 1b
 286 010a C601      		movw r24,r12
 287 010c 8821      		and r24,r8
 288 010e 9921      		and r25,r9
 289 0110 892B      		or r24,r25
 290 0112 01F0      		breq .L8
 291               	.LBB4:
 131:../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 292               		.loc 1 131 0
 293 0114 E982      		std Y+1,r14
 294 0116 5A82      		std Y+2,r5
 133:../../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 295               		.loc 1 133 0
 296 0118 21E0      		ldi r18,lo8(1)
 297 011a C501      		movw r24,r10
 298 011c 8821      		and r24,r8
 299 011e 9921      		and r25,r9
 300 0120 892B      		or r24,r25
 301 0122 01F4      		brne .L9
 302 0124 20E0      		ldi r18,0
 303               	.L9:
 131:../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 304               		.loc 1 131 0
 305 0126 2B83      		std Y+3,r18
 134:../../tmk_core/common/keyboard.c ****                     };
 306               		.loc 1 134 0
 307 0128 0E94 0000 		call timer_read
 308               	.LVL24:
 309 012c 8160      		ori r24,1
 131:../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 310               		.loc 1 131 0
 311 012e 782F      		mov r23,r24
 312 0130 9D83      		std Y+5,r25
 313 0132 8C83      		std Y+4,r24
 136:../../tmk_core/common/keyboard.c ****                     hook_matrix_change(e);
 314               		.loc 1 136 0
 315 0134 4981      		ldd r20,Y+1
 316 0136 5A81      		ldd r21,Y+2
 317 0138 6B81      		ldd r22,Y+3
 318 013a 8D81      		ldd r24,Y+5
 319 013c 0E94 0000 		call action_exec
 320               	.LVL25:
 137:../../tmk_core/common/keyboard.c ****                     // record a processed key
 321               		.loc 1 137 0
 322 0140 4981      		ldd r20,Y+1
 323 0142 5A81      		ldd r21,Y+2
 324 0144 6B81      		ldd r22,Y+3
 325 0146 7C81      		ldd r23,Y+4
 326 0148 8D81      		ldd r24,Y+5
 327 014a 0E94 0000 		call hook_matrix_change
 328               	.LVL26:
 139:../../tmk_core/common/keyboard.c **** 
 329               		.loc 1 139 0
 330 014e F801      		movw r30,r16
 331 0150 8081      		ld r24,Z
 332 0152 9181      		ldd r25,Z+1
 333 0154 8826      		eor r8,r24
 334 0156 9926      		eor r9,r25
 335 0158 9182      		std Z+1,r9
 336 015a 8082      		st Z,r8
 337               	.L8:
 338               	.LVL27:
 339 015c FFEF      		ldi r31,-1
 340 015e EF1A      		sub r14,r31
 341 0160 FF0A      		sbc r15,r31
 342               	.LVL28:
 343               	.LBE4:
 129:../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 344               		.loc 1 129 0 discriminator 2
 345 0162 8EE0      		ldi r24,14
 346 0164 E816      		cp r14,r24
 347 0166 F104      		cpc r15,__zero_reg__
 348 0168 01F4      		brne .L10
 349 016a 00C0      		rjmp .L11
 350               	.LVL29:
 351               	.L3:
 352               	/* epilogue start */
 353               	.LBE5:
 354               	.LBE6:
 355               		.loc 1 178 0
 356 016c 0F90      		pop __tmp_reg__
 357 016e 0F90      		pop __tmp_reg__
 358 0170 0F90      		pop __tmp_reg__
 359 0172 0F90      		pop __tmp_reg__
 360 0174 0F90      		pop __tmp_reg__
 361 0176 DF91      		pop r29
 362 0178 CF91      		pop r28
 363 017a 1F91      		pop r17
 364 017c 0F91      		pop r16
 365 017e FF90      		pop r15
 366 0180 EF90      		pop r14
 367 0182 DF90      		pop r13
 368 0184 CF90      		pop r12
 369 0186 BF90      		pop r11
 370 0188 AF90      		pop r10
 371               	.LVL30:
 372 018a 9F90      		pop r9
 373 018c 8F90      		pop r8
 374 018e 7F90      		pop r7
 375 0190 6F90      		pop r6
 376 0192 5F90      		pop r5
 377               	.LVL31:
 378 0194 0895      		ret
 379               		.cfi_endproc
 380               	.LFE105:
 382               		.section	.text.keyboard_set_leds,"ax",@progbits
 383               	.global	keyboard_set_leds
 385               	keyboard_set_leds:
 386               	.LFB106:
 179:../../tmk_core/common/keyboard.c **** 
 180:../../tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 181:../../tmk_core/common/keyboard.c **** {
 387               		.loc 1 181 0
 388               		.cfi_startproc
 389               	.LVL32:
 390               	/* prologue: function */
 391               	/* frame size = 0 */
 392               	/* stack size = 0 */
 393               	.L__stack_usage = 0
 182:../../tmk_core/common/keyboard.c ****     led_set(leds);
 394               		.loc 1 182 0
 395 0000 0C94 0000 		jmp led_set
 396               	.LVL33:
 397               		.cfi_endproc
 398               	.LFE106:
 400               		.section	.progmem.data.__c.4917,"a",@progbits
 403               	__c.4917:
 404 0000 4C45 443A 		.string	"LED: %02X\n"
 404      2025 3032 
 404      580A 00
 405               		.section	.bss.led_status.4900,"aw",@nobits
 408               	led_status.4900:
 409 0000 00        		.zero	1
 410               		.section	.bss.matrix_prev.4899,"aw",@nobits
 413               	matrix_prev.4899:
 414 0000 0000 0000 		.zero	10
 414      0000 0000 
 414      0000 
 415               		.text
 416               	.Letext0:
 417               		.file 2 "/usr/avr/include/stdint.h"
 418               		.file 3 "../../tmk_core/common/keyboard.h"
 419               		.file 4 "../../tmk_core/common/matrix.h"
 420               		.file 5 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 421               		.file 6 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 422               		.file 7 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 423               		.file 8 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/HostStandardReq.h"
 424               		.file 9 "/usr/avr/include/stdio.h"
 425               		.file 10 "../../tmk_core/common/host.h"
 426               		.file 11 "../../tmk_core/common/timer.h"
 427               		.file 12 "../../tmk_core/common/avr/xprintf.h"
 428               		.file 13 "../../tmk_core/common/debug.h"
 429               		.file 14 "../../tmk_core/common/command.h"
 430               		.file 15 "../../tmk_core/common/mousekey.h"
 431               		.file 16 "../../tmk_core/common/led.h"
 432               		.file 17 "../../tmk_core/common/action.h"
 433               		.file 18 "../../tmk_core/common/hook.h"
 434               		.file 19 "../../tmk_core/common/bootmagic.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
     /tmp/ccXuOh1D.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccXuOh1D.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccXuOh1D.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccXuOh1D.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccXuOh1D.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccXuOh1D.s:13     .text.keyboard_setup:0000000000000000 keyboard_setup
     /tmp/ccXuOh1D.s:31     .text.keyboard_init:0000000000000000 keyboard_init
     /tmp/ccXuOh1D.s:54     .text.keyboard_task:0000000000000000 keyboard_task
     /tmp/ccXuOh1D.s:413    .bss.matrix_prev.4899:0000000000000000 matrix_prev.4899
     /tmp/ccXuOh1D.s:408    .bss.led_status.4900:0000000000000000 led_status.4900
     /tmp/ccXuOh1D.s:403    .progmem.data.__c.4917:0000000000000000 __c.4917
     /tmp/ccXuOh1D.s:385    .text.keyboard_set_leds:0000000000000000 keyboard_set_leds

UNDEFINED SYMBOLS
matrix_setup
timer_init
matrix_init
bootmagic
matrix_scan
matrix_get_row
timer_read
action_exec
hook_keyboard_loop
mousekey_task
host_keyboard_leds
debug_config
__xprintf
hook_keyboard_leds_change
matrix_print
hook_matrix_change
led_set
__do_clear_bss
