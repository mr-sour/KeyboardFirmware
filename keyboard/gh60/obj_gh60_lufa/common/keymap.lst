   1               		.file	"keymap.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.keycode_to_action,"ax",@progbits
  12               	keycode_to_action:
  13               	.LFB106:
  14               		.file 1 "../../tmk_core/common/keymap.c"
   1:../../tmk_core/common/keymap.c **** /*
   2:../../tmk_core/common/keymap.c **** Copyright 2013,2016 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/keymap.c **** 
   4:../../tmk_core/common/keymap.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/keymap.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/keymap.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/keymap.c **** (at your option) any later version.
   8:../../tmk_core/common/keymap.c **** 
   9:../../tmk_core/common/keymap.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/keymap.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/keymap.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/keymap.c **** GNU General Public License for more details.
  13:../../tmk_core/common/keymap.c **** 
  14:../../tmk_core/common/keymap.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/keymap.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/keymap.c **** */
  17:../../tmk_core/common/keymap.c **** #include "keymap.h"
  18:../../tmk_core/common/keymap.c **** #include "report.h"
  19:../../tmk_core/common/keymap.c **** #include "keycode.h"
  20:../../tmk_core/common/keymap.c **** #include "action_layer.h"
  21:../../tmk_core/common/keymap.c **** #include "action.h"
  22:../../tmk_core/common/keymap.c **** #include "action_macro.h"
  23:../../tmk_core/common/keymap.c **** #include "wait.h"
  24:../../tmk_core/common/keymap.c **** #include "debug.h"
  25:../../tmk_core/common/keymap.c **** #include "bootloader.h"
  26:../../tmk_core/common/keymap.c **** #if defined(__AVR__)
  27:../../tmk_core/common/keymap.c **** #include <avr/pgmspace.h>
  28:../../tmk_core/common/keymap.c **** #endif
  29:../../tmk_core/common/keymap.c **** 
  30:../../tmk_core/common/keymap.c **** #ifdef BOOTMAGIC_ENABLE
  31:../../tmk_core/common/keymap.c **** extern keymap_config_t keymap_config;
  32:../../tmk_core/common/keymap.c **** #endif
  33:../../tmk_core/common/keymap.c **** 
  34:../../tmk_core/common/keymap.c **** static action_t keycode_to_action(uint8_t keycode);
  35:../../tmk_core/common/keymap.c **** 
  36:../../tmk_core/common/keymap.c **** 
  37:../../tmk_core/common/keymap.c **** /* converts key to action */
  38:../../tmk_core/common/keymap.c **** __attribute__ ((weak))
  39:../../tmk_core/common/keymap.c **** action_t action_for_key(uint8_t layer, keypos_t key)
  40:../../tmk_core/common/keymap.c **** {
  41:../../tmk_core/common/keymap.c ****     uint8_t keycode = keymap_key_to_keycode(layer, key);
  42:../../tmk_core/common/keymap.c ****     switch (keycode) {
  43:../../tmk_core/common/keymap.c ****         case KC_FN0 ... KC_FN31:
  44:../../tmk_core/common/keymap.c ****             return keymap_fn_to_action(keycode);
  45:../../tmk_core/common/keymap.c **** #ifdef BOOTMAGIC_ENABLE
  46:../../tmk_core/common/keymap.c ****         case KC_CAPSLOCK:
  47:../../tmk_core/common/keymap.c ****         case KC_LOCKING_CAPS:
  48:../../tmk_core/common/keymap.c ****             if (keymap_config.swap_control_capslock || keymap_config.capslock_to_control) {
  49:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_LCTL);
  50:../../tmk_core/common/keymap.c ****             }
  51:../../tmk_core/common/keymap.c ****             return keycode_to_action(keycode);
  52:../../tmk_core/common/keymap.c ****         case KC_LCTL:
  53:../../tmk_core/common/keymap.c ****             if (keymap_config.swap_control_capslock) {
  54:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_CAPSLOCK);
  55:../../tmk_core/common/keymap.c ****             }
  56:../../tmk_core/common/keymap.c ****             return keycode_to_action(KC_LCTL);
  57:../../tmk_core/common/keymap.c ****         case KC_LALT:
  58:../../tmk_core/common/keymap.c ****             if (keymap_config.swap_lalt_lgui) {
  59:../../tmk_core/common/keymap.c ****                 if (keymap_config.no_gui) {
  60:../../tmk_core/common/keymap.c ****                     return keycode_to_action(KC_NO);
  61:../../tmk_core/common/keymap.c ****                 }
  62:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_LGUI);
  63:../../tmk_core/common/keymap.c ****             }
  64:../../tmk_core/common/keymap.c ****             return keycode_to_action(KC_LALT);
  65:../../tmk_core/common/keymap.c ****         case KC_LGUI:
  66:../../tmk_core/common/keymap.c ****             if (keymap_config.swap_lalt_lgui) {
  67:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_LALT);
  68:../../tmk_core/common/keymap.c ****             }
  69:../../tmk_core/common/keymap.c ****             if (keymap_config.no_gui) {
  70:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_NO);
  71:../../tmk_core/common/keymap.c ****             }
  72:../../tmk_core/common/keymap.c ****             return keycode_to_action(KC_LGUI);
  73:../../tmk_core/common/keymap.c ****         case KC_RALT:
  74:../../tmk_core/common/keymap.c ****             if (keymap_config.swap_ralt_rgui) {
  75:../../tmk_core/common/keymap.c ****                 if (keymap_config.no_gui) {
  76:../../tmk_core/common/keymap.c ****                     return keycode_to_action(KC_NO);
  77:../../tmk_core/common/keymap.c ****                 }
  78:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_RGUI);
  79:../../tmk_core/common/keymap.c ****             }
  80:../../tmk_core/common/keymap.c ****             return keycode_to_action(KC_RALT);
  81:../../tmk_core/common/keymap.c ****         case KC_RGUI:
  82:../../tmk_core/common/keymap.c ****             if (keymap_config.swap_ralt_rgui) {
  83:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_RALT);
  84:../../tmk_core/common/keymap.c ****             }
  85:../../tmk_core/common/keymap.c ****             if (keymap_config.no_gui) {
  86:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_NO);
  87:../../tmk_core/common/keymap.c ****             }
  88:../../tmk_core/common/keymap.c ****             return keycode_to_action(KC_RGUI);
  89:../../tmk_core/common/keymap.c ****         case KC_GRAVE:
  90:../../tmk_core/common/keymap.c ****             if (keymap_config.swap_grave_esc) {
  91:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_ESC);
  92:../../tmk_core/common/keymap.c ****             }
  93:../../tmk_core/common/keymap.c ****             return keycode_to_action(KC_GRAVE);
  94:../../tmk_core/common/keymap.c ****         case KC_ESC:
  95:../../tmk_core/common/keymap.c ****             if (keymap_config.swap_grave_esc) {
  96:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_GRAVE);
  97:../../tmk_core/common/keymap.c ****             }
  98:../../tmk_core/common/keymap.c ****             return keycode_to_action(KC_ESC);
  99:../../tmk_core/common/keymap.c ****         case KC_BSLASH:
 100:../../tmk_core/common/keymap.c ****             if (keymap_config.swap_backslash_backspace) {
 101:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_BSPACE);
 102:../../tmk_core/common/keymap.c ****             }
 103:../../tmk_core/common/keymap.c ****             return keycode_to_action(KC_BSLASH);
 104:../../tmk_core/common/keymap.c ****         case KC_BSPACE:
 105:../../tmk_core/common/keymap.c ****             if (keymap_config.swap_backslash_backspace) {
 106:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_BSLASH);
 107:../../tmk_core/common/keymap.c ****             }
 108:../../tmk_core/common/keymap.c ****             return keycode_to_action(KC_BSPACE);
 109:../../tmk_core/common/keymap.c **** #endif
 110:../../tmk_core/common/keymap.c ****         default:
 111:../../tmk_core/common/keymap.c ****             return keycode_to_action(keycode);
 112:../../tmk_core/common/keymap.c ****     }
 113:../../tmk_core/common/keymap.c **** }
 114:../../tmk_core/common/keymap.c **** 
 115:../../tmk_core/common/keymap.c **** 
 116:../../tmk_core/common/keymap.c **** /* Macro */
 117:../../tmk_core/common/keymap.c **** __attribute__ ((weak))
 118:../../tmk_core/common/keymap.c **** const macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)
 119:../../tmk_core/common/keymap.c **** {
 120:../../tmk_core/common/keymap.c ****     (void)record;
 121:../../tmk_core/common/keymap.c ****     (void)id;
 122:../../tmk_core/common/keymap.c ****     (void)opt;
 123:../../tmk_core/common/keymap.c ****     return MACRO_NONE;
 124:../../tmk_core/common/keymap.c **** }
 125:../../tmk_core/common/keymap.c **** 
 126:../../tmk_core/common/keymap.c **** /* Function */
 127:../../tmk_core/common/keymap.c **** __attribute__ ((weak))
 128:../../tmk_core/common/keymap.c **** void action_function(keyrecord_t *record, uint8_t id, uint8_t opt)
 129:../../tmk_core/common/keymap.c **** {
 130:../../tmk_core/common/keymap.c ****     (void)record;
 131:../../tmk_core/common/keymap.c ****     (void)id;
 132:../../tmk_core/common/keymap.c ****     (void)opt;
 133:../../tmk_core/common/keymap.c **** }
 134:../../tmk_core/common/keymap.c **** 
 135:../../tmk_core/common/keymap.c **** 
 136:../../tmk_core/common/keymap.c **** 
 137:../../tmk_core/common/keymap.c **** /* translates keycode to action */
 138:../../tmk_core/common/keymap.c **** static action_t keycode_to_action(uint8_t keycode)
 139:../../tmk_core/common/keymap.c **** {
  15               		.loc 1 139 0
  16               		.cfi_startproc
  17               	.LVL0:
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 140:../../tmk_core/common/keymap.c ****     switch (keycode) {
  22               		.loc 1 140 0
  23 0000 8D3B      		cpi r24,lo8(-67)
  24 0002 00F4      		brsh .L3
  25 0004 883A      		cpi r24,lo8(-88)
  26 0006 00F4      		brsh .L4
  27 0008 853A      		cpi r24,lo8(-91)
  28 000a 00F4      		brsh .L5
  29 000c 8430      		cpi r24,lo8(4)
  30 000e 00F4      		brsh .L6
  31 0010 8130      		cpi r24,lo8(1)
  32 0012 01F4      		brne .+2
  33 0014 00C0      		rjmp .L7
  34               	.LVL1:
  35               	.L2:
 141:../../tmk_core/common/keymap.c ****         case KC_A ... KC_EXSEL:
 142:../../tmk_core/common/keymap.c ****         case KC_LCTRL ... KC_RGUI:
 143:../../tmk_core/common/keymap.c ****             return (action_t)ACTION_KEY(keycode);
 144:../../tmk_core/common/keymap.c ****             break;
 145:../../tmk_core/common/keymap.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
 146:../../tmk_core/common/keymap.c ****             return (action_t)ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
 147:../../tmk_core/common/keymap.c ****             break;
 148:../../tmk_core/common/keymap.c ****         case KC_AUDIO_MUTE ... KC_WWW_FAVORITES:
 149:../../tmk_core/common/keymap.c ****             return (action_t)ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
 150:../../tmk_core/common/keymap.c ****             break;
 151:../../tmk_core/common/keymap.c ****         case KC_MS_UP ... KC_MS_ACCEL2:
 152:../../tmk_core/common/keymap.c ****             return (action_t)ACTION_MOUSEKEY(keycode);
 153:../../tmk_core/common/keymap.c ****             break;
 154:../../tmk_core/common/keymap.c ****         case KC_TRNS:
 155:../../tmk_core/common/keymap.c ****             return (action_t)ACTION_TRANSPARENT;
 156:../../tmk_core/common/keymap.c ****             break;
 157:../../tmk_core/common/keymap.c ****         case KC_BOOTLOADER:
 158:../../tmk_core/common/keymap.c ****             clear_keyboard();
 159:../../tmk_core/common/keymap.c ****             wait_ms(50);
 160:../../tmk_core/common/keymap.c ****             bootloader_jump(); // not return
 161:../../tmk_core/common/keymap.c ****             break;
 162:../../tmk_core/common/keymap.c ****         default:
 163:../../tmk_core/common/keymap.c ****             return (action_t)ACTION_NO;
  36               		.loc 1 163 0
  37 0016 80E0      		ldi r24,0
  38 0018 90E0      		ldi r25,0
 164:../../tmk_core/common/keymap.c ****             break;
 165:../../tmk_core/common/keymap.c ****     }
 166:../../tmk_core/common/keymap.c ****     return (action_t)ACTION_NO;
 167:../../tmk_core/common/keymap.c **** }
  39               		.loc 1 167 0
  40 001a 0895      		ret
  41               	.LVL2:
  42               	.L3:
 140:../../tmk_core/common/keymap.c ****         case KC_A ... KC_EXSEL:
  43               		.loc 1 140 0
  44 001c 883E      		cpi r24,lo8(-24)
  45 001e 00F4      		brsh .L8
  46 0020 803E      		cpi r24,lo8(-32)
  47 0022 00F4      		brsh .L6
  48 0024 8F3B      		cpi r24,lo8(-65)
  49 0026 01F4      		brne .L2
 158:../../tmk_core/common/keymap.c ****             wait_ms(50);
  50               		.loc 1 158 0
  51 0028 0E94 0000 		call clear_keyboard
  52               	.LVL3:
  53               	.LBB4:
  54               	.LBB5:
  55               		.file 2 "/usr/avr/include/util/delay.h"
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id$ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/avr/include/util/delay.h **** #  endif
  42:/usr/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/avr/include/util/delay.h **** 
  44:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/avr/include/util/delay.h **** #include <math.h>
  47:/usr/avr/include/util/delay.h **** 
  48:/usr/avr/include/util/delay.h **** /** \file */
  49:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/avr/include/util/delay.h ****     \code
  51:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/avr/include/util/delay.h ****     \endcode
  55:/usr/avr/include/util/delay.h **** 
  56:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/avr/include/util/delay.h ****     used.
  60:/usr/avr/include/util/delay.h **** 
  61:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/avr/include/util/delay.h **** 
  70:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/avr/include/util/delay.h **** 
  79:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** */
  84:/usr/avr/include/util/delay.h **** 
  85:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/avr/include/util/delay.h **** #endif
  89:/usr/avr/include/util/delay.h **** 
  90:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/avr/include/util/delay.h **** 
  97:/usr/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/avr/include/util/delay.h **** 
 103:/usr/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/avr/include/util/delay.h ****     integer value.
 107:/usr/avr/include/util/delay.h ****  */
 108:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/avr/include/util/delay.h **** #endif
 110:/usr/avr/include/util/delay.h **** 
 111:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/avr/include/util/delay.h **** #endif
 114:/usr/avr/include/util/delay.h **** 
 115:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/avr/include/util/delay.h **** #endif
 120:/usr/avr/include/util/delay.h **** 
 121:/usr/avr/include/util/delay.h **** /**
 122:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/avr/include/util/delay.h **** 
 124:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/avr/include/util/delay.h **** 
 126:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/avr/include/util/delay.h **** 
 131:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/avr/include/util/delay.h **** 
 137:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/avr/include/util/delay.h **** 
 142:/usr/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/avr/include/util/delay.h **** 
 147:/usr/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/avr/include/util/delay.h ****    respectively.
 151:/usr/avr/include/util/delay.h **** 
 152:/usr/avr/include/util/delay.h ****    \note
 153:/usr/avr/include/util/delay.h **** 
 154:/usr/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h ****  */
 165:/usr/avr/include/util/delay.h **** void
 166:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
 167:/usr/avr/include/util/delay.h **** {
 168:/usr/avr/include/util/delay.h **** 	double __tmp ;
 169:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 173:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 174:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 175:/usr/avr/include/util/delay.h **** 
 176:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/avr/include/util/delay.h **** 
 179:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/avr/include/util/delay.h **** 
 182:/usr/avr/include/util/delay.h **** 	#else
 183:/usr/avr/include/util/delay.h **** 		//round up by default
 184:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 185:/usr/avr/include/util/delay.h **** 	#endif
 186:/usr/avr/include/util/delay.h **** 
 187:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
  56               		.loc 2 187 0
  57 002c 2FEF      		ldi r18,lo8(159999)
  58 002e 80E7      		ldi r24,hi8(159999)
  59 0030 92E0      		ldi r25,hlo8(159999)
  60 0032 2150      	1:	subi r18,1
  61 0034 8040      		sbci r24,0
  62 0036 9040      		sbci r25,0
  63 0038 01F4      		brne 1b
  64 003a 00C0      		rjmp .
  65 003c 0000      		nop
  66               	.LVL4:
  67               	.LBE5:
  68               	.LBE4:
 160:../../tmk_core/common/keymap.c ****             break;
  69               		.loc 1 160 0
  70 003e 0E94 0000 		call bootloader_jump
  71               	.LVL5:
  72 0042 00C0      		rjmp .L2
  73               	.LVL6:
  74               	.L8:
 140:../../tmk_core/common/keymap.c ****         case KC_A ... KC_EXSEL:
  75               		.loc 1 140 0
  76 0044 803F      		cpi r24,lo8(-16)
  77 0046 00F0      		brlo .L2
  78 0048 90E0      		ldi r25,0
 152:../../tmk_core/common/keymap.c ****             break;
  79               		.loc 1 152 0
  80 004a 9065      		ori r25,80
  81               	.LVL7:
  82 004c 0895      		ret
  83               	.LVL8:
  84               	.L6:
 143:../../tmk_core/common/keymap.c ****             break;
  85               		.loc 1 143 0
  86 004e 90E0      		ldi r25,0
  87 0050 0895      		ret
  88               	.L5:
 146:../../tmk_core/common/keymap.c ****             break;
  89               		.loc 1 146 0
  90 0052 853A      		cpi r24,lo8(-91)
  91 0054 01F0      		breq .L14
 146:../../tmk_core/common/keymap.c ****             break;
  92               		.loc 1 146 0 is_stmt 0 discriminator 1
  93 0056 863A      		cpi r24,lo8(-90)
  94 0058 01F0      		breq .L15
 146:../../tmk_core/common/keymap.c ****             break;
  95               		.loc 1 146 0
  96 005a 33E8      		ldi r19,lo8(-125)
  97               	.L38:
  98 005c 20E4      		ldi r18,lo8(64)
  99               	.L13:
 149:../../tmk_core/common/keymap.c ****             break;
 100               		.loc 1 149 0 is_stmt 1 discriminator 84
 101 005e 832F      		mov r24,r19
 102               	.LVL9:
 103 0060 922F      		mov r25,r18
 104 0062 0895      		ret
 105               	.LVL10:
 106               	.L14:
 146:../../tmk_core/common/keymap.c ****             break;
 107               		.loc 1 146 0
 108 0064 31E8      		ldi r19,lo8(-127)
 109 0066 00C0      		rjmp .L38
 110               	.L15:
 111 0068 32E8      		ldi r19,lo8(-126)
 112 006a 00C0      		rjmp .L38
 113               	.L4:
 149:../../tmk_core/common/keymap.c ****             break;
 114               		.loc 1 149 0
 115 006c 883A      		cpi r24,lo8(-88)
 116 006e 01F0      		breq .L16
 149:../../tmk_core/common/keymap.c ****             break;
 117               		.loc 1 149 0 is_stmt 0 discriminator 1
 118 0070 893A      		cpi r24,lo8(-87)
 119 0072 01F0      		breq .L17
 149:../../tmk_core/common/keymap.c ****             break;
 120               		.loc 1 149 0 discriminator 3
 121 0074 8A3A      		cpi r24,lo8(-86)
 122 0076 01F0      		breq .L18
 149:../../tmk_core/common/keymap.c ****             break;
 123               		.loc 1 149 0 discriminator 5
 124 0078 8B3A      		cpi r24,lo8(-85)
 125 007a 01F0      		breq .L19
 149:../../tmk_core/common/keymap.c ****             break;
 126               		.loc 1 149 0 discriminator 7
 127 007c 8C3A      		cpi r24,lo8(-84)
 128 007e 01F0      		breq .L20
 149:../../tmk_core/common/keymap.c ****             break;
 129               		.loc 1 149 0 discriminator 9
 130 0080 8D3A      		cpi r24,lo8(-83)
 131 0082 01F0      		breq .L21
 149:../../tmk_core/common/keymap.c ****             break;
 132               		.loc 1 149 0 discriminator 11
 133 0084 8E3A      		cpi r24,lo8(-82)
 134 0086 01F0      		breq .L22
 149:../../tmk_core/common/keymap.c ****             break;
 135               		.loc 1 149 0 discriminator 13
 136 0088 8F3A      		cpi r24,lo8(-81)
 137 008a 01F0      		breq .L23
 149:../../tmk_core/common/keymap.c ****             break;
 138               		.loc 1 149 0 discriminator 15
 139 008c 813B      		cpi r24,lo8(-79)
 140 008e 01F0      		breq .L24
 149:../../tmk_core/common/keymap.c ****             break;
 141               		.loc 1 149 0 discriminator 17
 142 0090 803B      		cpi r24,lo8(-80)
 143 0092 01F0      		breq .L25
 149:../../tmk_core/common/keymap.c ****             break;
 144               		.loc 1 149 0 discriminator 19
 145 0094 823B      		cpi r24,lo8(-78)
 146 0096 01F0      		breq .L26
 149:../../tmk_core/common/keymap.c ****             break;
 147               		.loc 1 149 0 discriminator 21
 148 0098 833B      		cpi r24,lo8(-77)
 149 009a 01F0      		breq .L27
 149:../../tmk_core/common/keymap.c ****             break;
 150               		.loc 1 149 0 discriminator 23
 151 009c 843B      		cpi r24,lo8(-76)
 152 009e 01F0      		breq .L28
 149:../../tmk_core/common/keymap.c ****             break;
 153               		.loc 1 149 0 discriminator 25
 154 00a0 853B      		cpi r24,lo8(-75)
 155 00a2 01F0      		breq .L29
 149:../../tmk_core/common/keymap.c ****             break;
 156               		.loc 1 149 0 discriminator 27
 157 00a4 863B      		cpi r24,lo8(-74)
 158 00a6 01F0      		breq .L30
 149:../../tmk_core/common/keymap.c ****             break;
 159               		.loc 1 149 0 discriminator 29
 160 00a8 873B      		cpi r24,lo8(-73)
 161 00aa 01F0      		breq .L31
 149:../../tmk_core/common/keymap.c ****             break;
 162               		.loc 1 149 0 discriminator 31
 163 00ac 883B      		cpi r24,lo8(-72)
 164 00ae 01F0      		breq .L32
 149:../../tmk_core/common/keymap.c ****             break;
 165               		.loc 1 149 0 discriminator 33
 166 00b0 893B      		cpi r24,lo8(-71)
 167 00b2 01F0      		breq .L33
 149:../../tmk_core/common/keymap.c ****             break;
 168               		.loc 1 149 0 discriminator 35
 169 00b4 8A3B      		cpi r24,lo8(-70)
 170 00b6 01F0      		breq .L34
 149:../../tmk_core/common/keymap.c ****             break;
 171               		.loc 1 149 0 discriminator 37
 172 00b8 8B3B      		cpi r24,lo8(-69)
 173 00ba 01F0      		breq .L35
 149:../../tmk_core/common/keymap.c ****             break;
 174               		.loc 1 149 0 discriminator 39
 175 00bc 8C3B      		cpi r24,lo8(-68)
 176 00be 01F0      		breq .L36
 149:../../tmk_core/common/keymap.c ****             break;
 177               		.loc 1 149 0
 178 00c0 30E0      		ldi r19,0
 179               	.L39:
 180 00c2 24E4      		ldi r18,lo8(68)
 181 00c4 00C0      		rjmp .L13
 182               	.L16:
 183 00c6 32EE      		ldi r19,lo8(-30)
 184 00c8 00C0      		rjmp .L39
 185               	.L17:
 186 00ca 39EE      		ldi r19,lo8(-23)
 187 00cc 00C0      		rjmp .L39
 188               	.L18:
 189 00ce 3AEE      		ldi r19,lo8(-22)
 190 00d0 00C0      		rjmp .L39
 191               	.L19:
 192 00d2 35EB      		ldi r19,lo8(-75)
 193 00d4 00C0      		rjmp .L39
 194               	.L20:
 195 00d6 36EB      		ldi r19,lo8(-74)
 196 00d8 00C0      		rjmp .L39
 197               	.L21:
 198 00da 33EB      		ldi r19,lo8(-77)
 199 00dc 00C0      		rjmp .L39
 200               	.L22:
 201 00de 34EB      		ldi r19,lo8(-76)
 202 00e0 00C0      		rjmp .L39
 203               	.L23:
 204 00e2 37EB      		ldi r19,lo8(-73)
 205 00e4 00C0      		rjmp .L39
 206               	.L24:
 207 00e6 3CEC      		ldi r19,lo8(-52)
 208 00e8 00C0      		rjmp .L39
 209               	.L25:
 210 00ea 3DEC      		ldi r19,lo8(-51)
 211 00ec 00C0      		rjmp .L39
 212               	.L26:
 213 00ee 33E8      		ldi r19,lo8(-125)
 214               	.L41:
 215 00f0 25E4      		ldi r18,lo8(69)
 216 00f2 00C0      		rjmp .L13
 217               	.L27:
 218 00f4 3AE8      		ldi r19,lo8(-118)
 219 00f6 00C0      		rjmp .L41
 220               	.L28:
 221 00f8 32E9      		ldi r19,lo8(-110)
 222 00fa 00C0      		rjmp .L41
 223               	.L29:
 224 00fc 34E9      		ldi r19,lo8(-108)
 225 00fe 00C0      		rjmp .L41
 226               	.L30:
 227 0100 31E2      		ldi r19,lo8(33)
 228               	.L40:
 229 0102 26E4      		ldi r18,lo8(70)
 230 0104 00C0      		rjmp .L13
 231               	.L31:
 232 0106 33E2      		ldi r19,lo8(35)
 233 0108 00C0      		rjmp .L40
 234               	.L32:
 235 010a 34E2      		ldi r19,lo8(36)
 236 010c 00C0      		rjmp .L40
 237               	.L33:
 238 010e 35E2      		ldi r19,lo8(37)
 239 0110 00C0      		rjmp .L40
 240               	.L34:
 241 0112 36E2      		ldi r19,lo8(38)
 242 0114 00C0      		rjmp .L40
 243               	.L35:
 244 0116 37E2      		ldi r19,lo8(39)
 245 0118 00C0      		rjmp .L40
 246               	.L36:
 247 011a 3AE2      		ldi r19,lo8(42)
 248 011c 00C0      		rjmp .L40
 249               	.L7:
 155:../../tmk_core/common/keymap.c ****             break;
 250               		.loc 1 155 0 is_stmt 1
 251 011e 81E0      		ldi r24,lo8(1)
 252 0120 90E0      		ldi r25,0
 253               	.LVL11:
 254 0122 0895      		ret
 255               		.cfi_endproc
 256               	.LFE106:
 258               		.section	.text.action_get_macro,"ax",@progbits
 259               		.weak	action_get_macro
 261               	action_get_macro:
 262               	.LFB104:
 119:../../tmk_core/common/keymap.c ****     (void)record;
 263               		.loc 1 119 0
 264               		.cfi_startproc
 265               	.LVL12:
 266               	/* prologue: function */
 267               	/* frame size = 0 */
 268               	/* stack size = 0 */
 269               	.L__stack_usage = 0
 124:../../tmk_core/common/keymap.c **** 
 270               		.loc 1 124 0
 271 0000 80E0      		ldi r24,0
 272 0002 90E0      		ldi r25,0
 273               	.LVL13:
 274 0004 0895      		ret
 275               		.cfi_endproc
 276               	.LFE104:
 278               		.section	.text.action_function,"ax",@progbits
 279               		.weak	action_function
 281               	action_function:
 282               	.LFB105:
 129:../../tmk_core/common/keymap.c ****     (void)record;
 283               		.loc 1 129 0
 284               		.cfi_startproc
 285               	.LVL14:
 286               	/* prologue: function */
 287               	/* frame size = 0 */
 288               	/* stack size = 0 */
 289               	.L__stack_usage = 0
 290 0000 0895      		ret
 291               		.cfi_endproc
 292               	.LFE105:
 294               		.section	.text.keymap_key_to_keycode,"ax",@progbits
 295               		.weak	keymap_key_to_keycode
 297               	keymap_key_to_keycode:
 298               	.LFB107:
 168:../../tmk_core/common/keymap.c **** 
 169:../../tmk_core/common/keymap.c **** 
 170:../../tmk_core/common/keymap.c **** 
 171:../../tmk_core/common/keymap.c **** #ifdef USE_LEGACY_KEYMAP
 172:../../tmk_core/common/keymap.c **** /*
 173:../../tmk_core/common/keymap.c ****  * Legacy keymap support
 174:../../tmk_core/common/keymap.c ****  *      Consider using new keymap API instead.
 175:../../tmk_core/common/keymap.c ****  */
 176:../../tmk_core/common/keymap.c **** extern const uint8_t keymaps[][MATRIX_ROWS][MATRIX_COLS];
 177:../../tmk_core/common/keymap.c **** extern const uint8_t fn_layer[];
 178:../../tmk_core/common/keymap.c **** extern const uint8_t fn_keycode[];
 179:../../tmk_core/common/keymap.c **** 
 180:../../tmk_core/common/keymap.c **** __attribute__ ((weak))
 181:../../tmk_core/common/keymap.c **** uint8_t keymap_get_keycode(uint8_t layer, uint8_t row, uint8_t col)
 182:../../tmk_core/common/keymap.c **** {
 183:../../tmk_core/common/keymap.c ****     return pgm_read_byte(&keymaps[(layer)][(row)][(col)]);
 184:../../tmk_core/common/keymap.c **** }
 185:../../tmk_core/common/keymap.c **** 
 186:../../tmk_core/common/keymap.c **** __attribute__ ((weak))
 187:../../tmk_core/common/keymap.c **** uint8_t keymap_fn_layer(uint8_t index)
 188:../../tmk_core/common/keymap.c **** {
 189:../../tmk_core/common/keymap.c ****     return pgm_read_byte(&fn_layer[index]);
 190:../../tmk_core/common/keymap.c **** }
 191:../../tmk_core/common/keymap.c **** 
 192:../../tmk_core/common/keymap.c **** __attribute__ ((weak))
 193:../../tmk_core/common/keymap.c **** uint8_t keymap_fn_keycode(uint8_t index)
 194:../../tmk_core/common/keymap.c **** {
 195:../../tmk_core/common/keymap.c ****     return pgm_read_byte(&fn_keycode[index]);
 196:../../tmk_core/common/keymap.c **** }
 197:../../tmk_core/common/keymap.c **** 
 198:../../tmk_core/common/keymap.c **** __attribute__ ((weak))
 199:../../tmk_core/common/keymap.c **** uint8_t keymap_key_to_keycode(uint8_t layer, keypos_t key)
 200:../../tmk_core/common/keymap.c **** {
 201:../../tmk_core/common/keymap.c ****     return keymap_get_keycode(layer, key.row, key.col);
 202:../../tmk_core/common/keymap.c **** }
 203:../../tmk_core/common/keymap.c **** 
 204:../../tmk_core/common/keymap.c **** 
 205:../../tmk_core/common/keymap.c **** /* Legacy keymap support */
 206:../../tmk_core/common/keymap.c **** __attribute__ ((weak))
 207:../../tmk_core/common/keymap.c **** action_t keymap_fn_to_action(uint8_t keycode)
 208:../../tmk_core/common/keymap.c **** {
 209:../../tmk_core/common/keymap.c ****     switch (keycode) {
 210:../../tmk_core/common/keymap.c ****         case KC_FN0 ... KC_FN31:
 211:../../tmk_core/common/keymap.c ****             {
 212:../../tmk_core/common/keymap.c ****                 uint8_t layer = keymap_fn_layer(FN_INDEX(keycode));
 213:../../tmk_core/common/keymap.c ****                 uint8_t key = keymap_fn_keycode(FN_INDEX(keycode));
 214:../../tmk_core/common/keymap.c ****                 if (key) {
 215:../../tmk_core/common/keymap.c ****                     return (action_t)ACTION_LAYER_TAP_KEY(layer, key);
 216:../../tmk_core/common/keymap.c ****                 } else {
 217:../../tmk_core/common/keymap.c ****                     return (action_t)ACTION_LAYER_MOMENTARY(layer);
 218:../../tmk_core/common/keymap.c ****                 }
 219:../../tmk_core/common/keymap.c ****             }
 220:../../tmk_core/common/keymap.c ****             return (action_t)ACTION_NO;
 221:../../tmk_core/common/keymap.c ****         default:
 222:../../tmk_core/common/keymap.c ****             return (action_t)ACTION_NO;
 223:../../tmk_core/common/keymap.c ****     }
 224:../../tmk_core/common/keymap.c **** }
 225:../../tmk_core/common/keymap.c **** 
 226:../../tmk_core/common/keymap.c **** #else
 227:../../tmk_core/common/keymap.c **** 
 228:../../tmk_core/common/keymap.c **** /* user keymaps should be defined somewhere */
 229:../../tmk_core/common/keymap.c **** extern const uint8_t keymaps[][MATRIX_ROWS][MATRIX_COLS];
 230:../../tmk_core/common/keymap.c **** extern const action_t fn_actions[];
 231:../../tmk_core/common/keymap.c **** 
 232:../../tmk_core/common/keymap.c **** __attribute__ ((weak))
 233:../../tmk_core/common/keymap.c **** uint8_t keymap_key_to_keycode(uint8_t layer, keypos_t key)
 234:../../tmk_core/common/keymap.c **** {
 299               		.loc 1 234 0
 300               		.cfi_startproc
 301               	.LVL15:
 302               	/* prologue: function */
 303               	/* frame size = 0 */
 304               	/* stack size = 0 */
 305               	.L__stack_usage = 0
 306               	.LBB6:
 235:../../tmk_core/common/keymap.c **** #if defined(__AVR__)
 236:../../tmk_core/common/keymap.c ****     return pgm_read_byte(&keymaps[(layer)][(key.row)][(key.col)]);
 307               		.loc 1 236 0
 308 0000 E62F      		mov r30,r22
 309 0002 F0E0      		ldi r31,0
 310 0004 9EE0      		ldi r25,lo8(14)
 311 0006 799F      		mul r23,r25
 312 0008 E00D      		add r30,r0
 313 000a F11D      		adc r31,r1
 314 000c 1124      		clr __zero_reg__
 315 000e 96E4      		ldi r25,lo8(70)
 316 0010 899F      		mul r24,r25
 317 0012 E00D      		add r30,r0
 318 0014 F11D      		adc r31,r1
 319 0016 1124      		clr __zero_reg__
 320 0018 E050      		subi r30,lo8(-(keymaps))
 321 001a F040      		sbci r31,hi8(-(keymaps))
 322               	/* #APP */
 323               	 ;  236 "../../tmk_core/common/keymap.c" 1
 324 001c 8491      		lpm r24, Z
 325               		
 326               	 ;  0 "" 2
 327               	.LVL16:
 328               	/* #NOAPP */
 329               	.LBE6:
 237:../../tmk_core/common/keymap.c **** #else
 238:../../tmk_core/common/keymap.c ****     return keymaps[(layer)][(key.row)][(key.col)];
 239:../../tmk_core/common/keymap.c **** #endif
 240:../../tmk_core/common/keymap.c **** }
 330               		.loc 1 240 0
 331 001e 0895      		ret
 332               		.cfi_endproc
 333               	.LFE107:
 335               		.section	.text.keymap_fn_to_action,"ax",@progbits
 336               		.weak	keymap_fn_to_action
 338               	keymap_fn_to_action:
 339               	.LFB108:
 241:../../tmk_core/common/keymap.c **** 
 242:../../tmk_core/common/keymap.c **** __attribute__ ((weak))
 243:../../tmk_core/common/keymap.c **** action_t keymap_fn_to_action(uint8_t keycode)
 244:../../tmk_core/common/keymap.c **** {
 340               		.loc 1 244 0
 341               		.cfi_startproc
 342               	.LVL17:
 343               	/* prologue: function */
 344               	/* frame size = 0 */
 345               	/* stack size = 0 */
 346               	.L__stack_usage = 0
 347               	.LBB7:
 245:../../tmk_core/common/keymap.c **** #if defined(__AVR__)
 246:../../tmk_core/common/keymap.c ****     return (action_t)pgm_read_word(&fn_actions[FN_INDEX(keycode)]);
 348               		.loc 1 246 0
 349 0000 E82F      		mov r30,r24
 350 0002 F0E0      		ldi r31,0
 351 0004 EE0F      		lsl r30
 352 0006 FF1F      		rol r31
 353               	.LVL18:
 354 0008 E050      		subi r30,lo8(-(fn_actions-384))
 355 000a F040      		sbci r31,hi8(-(fn_actions-384))
 356               	.LVL19:
 357               	/* #APP */
 358               	 ;  246 "../../tmk_core/common/keymap.c" 1
 359 000c 8591      		lpm r24, Z+
 360 000e 9491      		lpm r25, Z
 361               		
 362               	 ;  0 "" 2
 363               	.LVL20:
 364               	/* #NOAPP */
 365               	.LBE7:
 247:../../tmk_core/common/keymap.c **** #else
 248:../../tmk_core/common/keymap.c ****     return fn_actions[FN_INDEX(keycode)];
 249:../../tmk_core/common/keymap.c **** #endif
 250:../../tmk_core/common/keymap.c **** }
 366               		.loc 1 250 0
 367 0010 0895      		ret
 368               		.cfi_endproc
 369               	.LFE108:
 371               		.section	.text.action_for_key,"ax",@progbits
 372               		.weak	action_for_key
 374               	action_for_key:
 375               	.LFB103:
  40:../../tmk_core/common/keymap.c ****     uint8_t keycode = keymap_key_to_keycode(layer, key);
 376               		.loc 1 40 0
 377               		.cfi_startproc
 378               	.LVL21:
 379               	/* prologue: function */
 380               	/* frame size = 0 */
 381               	/* stack size = 0 */
 382               	.L__stack_usage = 0
  41:../../tmk_core/common/keymap.c ****     switch (keycode) {
 383               		.loc 1 41 0
 384 0000 0E94 0000 		call keymap_key_to_keycode
 385               	.LVL22:
  42:../../tmk_core/common/keymap.c ****         case KC_FN0 ... KC_FN31:
 386               		.loc 1 42 0
 387 0004 803E      		cpi r24,lo8(-32)
 388 0006 00F4      		brsh .L48
 389 0008 803C      		cpi r24,lo8(-64)
 390 000a 00F4      		brsh .L49
 391 000c 8133      		cpi r24,lo8(49)
 392 000e 01F4      		brne .+2
 393 0010 00C0      		rjmp .L50
 394 0012 00F4      		brsh .L51
 395 0014 8932      		cpi r24,lo8(41)
 396 0016 01F4      		brne .+2
 397 0018 00C0      		rjmp .L52
 398 001a 8A32      		cpi r24,lo8(42)
 399 001c 01F4      		brne .+2
 400 001e 00C0      		rjmp .L53
 401               	.LVL23:
 402               	.L47:
 111:../../tmk_core/common/keymap.c ****     }
 403               		.loc 1 111 0
 404 0020 0E94 0000 		call keycode_to_action
 405               	.LVL24:
 113:../../tmk_core/common/keymap.c **** 
 406               		.loc 1 113 0
 407 0024 0895      		ret
 408               	.LVL25:
 409               	.L51:
  42:../../tmk_core/common/keymap.c ****         case KC_FN0 ... KC_FN31:
 410               		.loc 1 42 0
 411 0026 8933      		cpi r24,lo8(57)
 412 0028 01F0      		breq .L54
 413 002a 8238      		cpi r24,lo8(-126)
 414 002c 01F0      		breq .L54
 415 002e 8533      		cpi r24,lo8(53)
 416 0030 01F4      		brne .L47
  90:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_ESC);
 417               		.loc 1 90 0
 418 0032 8091 0000 		lds r24,keymap_config
 419               	.LVL26:
 420 0036 85FF      		sbrs r24,5
 421 0038 00C0      		rjmp .L70
 422               	.L71:
  91:../../tmk_core/common/keymap.c ****             }
 423               		.loc 1 91 0
 424 003a 89E2      		ldi r24,lo8(41)
 425 003c 00C0      		rjmp .L47
 426               	.LVL27:
 427               	.L48:
  42:../../tmk_core/common/keymap.c ****         case KC_FN0 ... KC_FN31:
 428               		.loc 1 42 0
 429 003e 833E      		cpi r24,lo8(-29)
 430 0040 01F0      		breq .L56
 431 0042 00F4      		brsh .L57
 432 0044 803E      		cpi r24,lo8(-32)
 433 0046 01F0      		breq .L58
 434 0048 823E      		cpi r24,lo8(-30)
 435 004a 01F4      		brne .L47
  58:../../tmk_core/common/keymap.c ****                 if (keymap_config.no_gui) {
 436               		.loc 1 58 0
 437 004c 8091 0000 		lds r24,keymap_config
 438               	.LVL28:
 439 0050 82FF      		sbrs r24,2
 440 0052 00C0      		rjmp .L65
 441               	.L98:
  59:../../tmk_core/common/keymap.c ****                     return keycode_to_action(KC_NO);
 442               		.loc 1 59 0
 443 0054 84FF      		sbrs r24,4
 444 0056 00C0      		rjmp .L66
 445               	.L67:
  60:../../tmk_core/common/keymap.c ****                 }
 446               		.loc 1 60 0
 447 0058 80E0      		ldi r24,0
 448 005a 00C0      		rjmp .L47
 449               	.LVL29:
 450               	.L57:
  42:../../tmk_core/common/keymap.c ****         case KC_FN0 ... KC_FN31:
 451               		.loc 1 42 0
 452 005c 863E      		cpi r24,lo8(-26)
 453 005e 01F0      		breq .L60
 454 0060 873E      		cpi r24,lo8(-25)
 455 0062 01F4      		brne .L47
  82:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_RALT);
 456               		.loc 1 82 0
 457 0064 8091 0000 		lds r24,keymap_config
 458               	.LVL30:
 459 0068 83FF      		sbrs r24,3
 460 006a 00C0      		rjmp .L99
 461               	.L68:
  80:../../tmk_core/common/keymap.c ****         case KC_RGUI:
 462               		.loc 1 80 0
 463 006c 86EE      		ldi r24,lo8(-26)
 464 006e 00C0      		rjmp .L47
 465               	.LVL31:
 466               	.L49:
  44:../../tmk_core/common/keymap.c **** #ifdef BOOTMAGIC_ENABLE
 467               		.loc 1 44 0
 468 0070 0E94 0000 		call keymap_fn_to_action
 469               	.LVL32:
 470 0074 0895      		ret
 471               	.LVL33:
 472               	.L54:
  48:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_LCTL);
 473               		.loc 1 48 0
 474 0076 9091 0000 		lds r25,keymap_config
 475 007a 9370      		andi r25,lo8(3)
 476 007c 01F0      		breq .L47
 477               	.LVL34:
 478               	.L64:
  49:../../tmk_core/common/keymap.c ****             }
 479               		.loc 1 49 0
 480 007e 80EE      		ldi r24,lo8(-32)
 481 0080 00C0      		rjmp .L47
 482               	.LVL35:
 483               	.L58:
  53:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_CAPSLOCK);
 484               		.loc 1 53 0
 485 0082 8091 0000 		lds r24,keymap_config
 486               	.LVL36:
 487 0086 80FF      		sbrs r24,0
 488 0088 00C0      		rjmp .L64
  54:../../tmk_core/common/keymap.c ****             }
 489               		.loc 1 54 0
 490 008a 89E3      		ldi r24,lo8(57)
 491 008c 00C0      		rjmp .L47
 492               	.L66:
  62:../../tmk_core/common/keymap.c ****             }
 493               		.loc 1 62 0
 494 008e 83EE      		ldi r24,lo8(-29)
 495 0090 00C0      		rjmp .L47
 496               	.LVL37:
 497               	.L56:
  66:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_LALT);
 498               		.loc 1 66 0
 499 0092 8091 0000 		lds r24,keymap_config
 500               	.LVL38:
 501 0096 82FF      		sbrs r24,2
 502 0098 00C0      		rjmp .L98
 503               	.L65:
  64:../../tmk_core/common/keymap.c ****         case KC_LGUI:
 504               		.loc 1 64 0
 505 009a 82EE      		ldi r24,lo8(-30)
 506 009c 00C0      		rjmp .L47
 507               	.LVL39:
 508               	.L60:
  74:../../tmk_core/common/keymap.c ****                 if (keymap_config.no_gui) {
 509               		.loc 1 74 0
 510 009e 8091 0000 		lds r24,keymap_config
 511               	.LVL40:
 512 00a2 83FF      		sbrs r24,3
 513 00a4 00C0      		rjmp .L68
 514               	.L99:
  85:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_NO);
 515               		.loc 1 85 0
 516 00a6 84FD      		sbrc r24,4
 517 00a8 00C0      		rjmp .L67
  78:../../tmk_core/common/keymap.c ****             }
 518               		.loc 1 78 0
 519 00aa 87EE      		ldi r24,lo8(-25)
 520 00ac 00C0      		rjmp .L47
 521               	.LVL41:
 522               	.L52:
  95:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_GRAVE);
 523               		.loc 1 95 0
 524 00ae 8091 0000 		lds r24,keymap_config
 525               	.LVL42:
 526 00b2 85FF      		sbrs r24,5
 527 00b4 00C0      		rjmp .L71
 528               	.L70:
  93:../../tmk_core/common/keymap.c ****         case KC_ESC:
 529               		.loc 1 93 0
 530 00b6 85E3      		ldi r24,lo8(53)
 531 00b8 00C0      		rjmp .L47
 532               	.LVL43:
 533               	.L50:
 100:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_BSPACE);
 534               		.loc 1 100 0
 535 00ba 8091 0000 		lds r24,keymap_config
 536               	.LVL44:
 537 00be 86FF      		sbrs r24,6
 538 00c0 00C0      		rjmp .L72
 539               	.L73:
 101:../../tmk_core/common/keymap.c ****             }
 540               		.loc 1 101 0
 541 00c2 8AE2      		ldi r24,lo8(42)
 542 00c4 00C0      		rjmp .L47
 543               	.LVL45:
 544               	.L53:
 105:../../tmk_core/common/keymap.c ****                 return keycode_to_action(KC_BSLASH);
 545               		.loc 1 105 0
 546 00c6 8091 0000 		lds r24,keymap_config
 547               	.LVL46:
 548 00ca 86FF      		sbrs r24,6
 549 00cc 00C0      		rjmp .L73
 550               	.L72:
 103:../../tmk_core/common/keymap.c ****         case KC_BSPACE:
 551               		.loc 1 103 0
 552 00ce 81E3      		ldi r24,lo8(49)
 553 00d0 00C0      		rjmp .L47
 554               		.cfi_endproc
 555               	.LFE103:
 557               		.text
 558               	.Letext0:
 559               		.file 3 "/usr/avr/include/stdint.h"
 560               		.file 4 "../../tmk_core/common/keyboard.h"
 561               		.file 5 "../../tmk_core/common/keycode.h"
 562               		.file 6 "../../tmk_core/common/action_code.h"
 563               		.file 7 "../../tmk_core/common/action_macro.h"
 564               		.file 8 "../../tmk_core/common/action.h"
 565               		.file 9 "../../tmk_core/common/keymap.h"
 566               		.file 10 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 567               		.file 11 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 568               		.file 12 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 569               		.file 13 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/HostStandardReq.h"
 570               		.file 14 "/usr/avr/include/stdio.h"
 571               		.file 15 "../../tmk_core/common/action_layer.h"
 572               		.file 16 "../../tmk_core/common/avr/xprintf.h"
 573               		.file 17 "../../tmk_core/common/debug.h"
 574               		.file 18 "../../tmk_core/common/bootloader.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keymap.c
     /tmp/ccAnFXIF.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccAnFXIF.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccAnFXIF.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccAnFXIF.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccAnFXIF.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccAnFXIF.s:12     .text.keycode_to_action:0000000000000000 keycode_to_action
     /tmp/ccAnFXIF.s:261    .text.action_get_macro:0000000000000000 action_get_macro
     /tmp/ccAnFXIF.s:281    .text.action_function:0000000000000000 action_function
     /tmp/ccAnFXIF.s:297    .text.keymap_key_to_keycode:0000000000000000 keymap_key_to_keycode
     /tmp/ccAnFXIF.s:338    .text.keymap_fn_to_action:0000000000000000 keymap_fn_to_action
     /tmp/ccAnFXIF.s:374    .text.action_for_key:0000000000000000 action_for_key

UNDEFINED SYMBOLS
clear_keyboard
bootloader_jump
keymaps
fn_actions
keymap_config
